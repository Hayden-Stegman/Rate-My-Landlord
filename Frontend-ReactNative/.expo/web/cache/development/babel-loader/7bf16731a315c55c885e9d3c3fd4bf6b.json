{"ast":null,"code":"import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Octicons, Fontisto } from '@expo/vector-icons';\nimport { Formik } from 'formik';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, StyledTextInput, StyledInputLabel, LeftIcon, StyledButton, ButtonText, Colors, MsgBox, Line } from \"../components/styles\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\n\nvar HomeScreen = function HomeScreen() {\n  var navigation = useNavigation();\n  return React.createElement(StyledContainer, null, React.createElement(StatusBar, {\n    style: \"dark\"\n  }), React.createElement(InnerContainer, null, React.createElement(PageLogo, {\n    resizeMode: \"cover\",\n    source: require(\"../assets/RateMyLandlordIcon.png\")\n  }), React.createElement(PageTitle, null, \"Rate My Landlord\"), React.createElement(SubTitle, null, \"Search\"), React.createElement(Formik, {\n    initialValues: {\n      search: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(\"Search\");\n      navigation.navigate('Results');\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values;\n    return React.createElement(StyledFormArea, null, React.createElement(MyTextInput, {\n      label: \"Zip Code\",\n      icon: \"search\",\n      defaultValue: \"\",\n      placeholder: \"Search by Zip Code...\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('search'),\n      onBlur: handleBlur('search'),\n      value: values.search,\n      keyboardType: \"numeric\",\n      maxLength: 5,\n      returnKeyType: \"done\"\n    }), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      type: \"submit\"\n    }, React.createElement(ButtonText, null, \"Search\")), React.createElement(MsgBox, null, \"...\"), React.createElement(Line, null), React.createElement(MsgBox, null, \"...\"), React.createElement(StyledButton, null, React.createElement(ButtonText, null, \"Login\")), React.createElement(StyledButton, {\n      google: true\n    }, React.createElement(Fontisto, {\n      name: \"google\",\n      color: primary,\n      size: 25\n    }), React.createElement(ButtonText, {\n      google: true\n    }, \"Sign in with Google\")));\n  })), React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Anywhere in your app!\"), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email\n    }), errors.email && touched.email && errors.email, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password\n    }), errors.password && touched.password && errors.password, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting\n    }, \"Submit\"));\n  })));\n};\n\nvar MyTextInput = function MyTextInput(props) {\n  return React.createElement(View, null, React.createElement(LeftIcon, null, React.createElement(Octicons, {\n    name: props.icon,\n    size: 30,\n    color: brand\n  })), React.createElement(StyledInputLabel, null, \" \", props.label, \" \"), React.createElement(StyledTextInput, props));\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/hayde/Documents/Rate-My-Landlord/Frontend-ReactNative/screens/HomeScreen.tsx"],"names":["React","StatusBar","useNavigation","Octicons","Fontisto","Formik","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","StyledTextInput","StyledInputLabel","LeftIcon","StyledButton","ButtonText","Colors","MsgBox","Line","brand","darkLight","primary","HomeScreen","navigation","require","search","values","console","log","navigate","handleChange","handleBlur","handleSubmit","email","password","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","isSubmitting","MyTextInput","props","icon","label"],"mappings":"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","sourcesContent":["/*\r\n  Author: Hayden Stegman\r\n*/\r\nimport React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { RootStackParamList } from './RootStackParamList';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { View } from 'react-native'\r\n\r\n// Icons\r\nimport{ Octicons, Fontisto } from '@expo/vector-icons'\r\n\r\n// Form Handeler\r\nimport { Formik } from 'formik';\r\n\r\n// Styles\r\nimport {\r\n  StyledContainer,\r\n  InnerContainer,\r\n  PageLogo,\r\n  PageTitle,\r\n  SubTitle,\r\n  StyledFormArea,\r\n  StyledTextInput,\r\n  StyledInputLabel,\r\n  LeftIcon,\r\n  StyledButton,\r\n  ButtonText,\r\n  Colors,\r\n  MsgBox,\r\n  Line\r\n} from '../components/styles';\r\n\r\n// Colors\r\nconst { brand, darkLight, primary } = Colors;\r\n\r\n// Navigation Prop\r\ntype HomeScreenProp = StackNavigationProp<RootStackParamList, 'Search'>;\r\n\r\n/*\r\n  Home Screen\r\n*/\r\nconst HomeScreen = () => {\r\n  const navigation = useNavigation<HomeScreenProp>()\r\n  \r\n  return (\r\n    <StyledContainer>\r\n      <StatusBar style=\"dark\" />\r\n      <InnerContainer>\r\n        \r\n        {/* Page Logo, Title, and Subtitle */}\r\n        <PageLogo resizeMode=\"cover\" source={require('../assets/RateMyLandlordIcon.png')} />\r\n        <PageTitle>Rate My Landlord</PageTitle>\r\n        <SubTitle>Search</SubTitle>\r\n\r\n        {/* Start of Form */}\r\n        <Formik\r\n          initialValues={{\r\n            search: ''\r\n          }}\r\n          onSubmit={(values) => {\r\n            console.log(\"Search\");\r\n            navigation.navigate('Results');\r\n          }}\r\n        >\r\n          {({handleChange, handleBlur, handleSubmit, values}) => (<StyledFormArea>\r\n            {/* Text Input Parameters for Search Bar */}\r\n            <MyTextInput \r\n              label=\"Zip Code\"\r\n              icon=\"search\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Search by Zip Code...\"\r\n              placeholderTextColor={ darkLight }\r\n              onChangeText={ handleChange('search') }\r\n              onBlur={ handleBlur('search') }\r\n              value={values.search}\r\n              keyboardType=\"numeric\"\r\n              maxLength={ 5 }\r\n              returnKeyType=\"done\"\r\n            />\r\n\r\n            {/* Button for submitting form/search data */}\r\n            <StyledButton onPress={handleSubmit} type=\"submit\">\r\n              <ButtonText>\r\n                Search\r\n              </ButtonText>\r\n            </StyledButton>\r\n\r\n            {/* Page Break between search and logins */}\r\n            <MsgBox>...</MsgBox>\r\n            <Line />\r\n            <MsgBox>...</MsgBox>\r\n\r\n            {/* Login and Google Login Buttons | TO BE IMPLEMENTED */}\r\n            <StyledButton>\r\n              <ButtonText>Login</ButtonText>\r\n            </StyledButton>\r\n            <StyledButton google={true}>\r\n              <Fontisto name=\"google\" color={ primary } size={ 25 } />\r\n              <ButtonText google={true}>Sign in with Google</ButtonText>\r\n            </StyledButton>\r\n\r\n          </StyledFormArea>)}\r\n        </Formik>\r\n      </InnerContainer>\r\n      <div>\r\n     <h1>Anywhere in your app!</h1>\r\n     <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <input\r\n             type=\"email\"\r\n             name=\"email\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.email}\r\n           />\r\n           {errors.email && touched.email && errors.email}\r\n           <input\r\n             type=\"password\"\r\n             name=\"password\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.password}\r\n           />\r\n           {errors.password && touched.password && errors.password}\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </form>\r\n       )}\r\n     </Formik>\r\n   </div>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\n// Search Bar Component\r\nconst MyTextInput = ( props:any ) => {\r\n  return (\r\n    <View>\r\n      <LeftIcon>\r\n        <Octicons name={ props.icon } size={ 30 } color={ brand } />\r\n      </LeftIcon>\r\n      <StyledInputLabel> {props.label} </StyledInputLabel>\r\n      <StyledTextInput { ...props } />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}